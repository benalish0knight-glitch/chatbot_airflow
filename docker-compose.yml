version: '3.7'
services:
    postgres:
        image: postgres:13
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "airflow"]
            interval: 5s
            retries: 5
        restart: always

    airflow-init:
        image: apache/airflow:2.8.1-python3.11
        container_name: airflow_init
        entrypoint: /bin/bash
        command: -c "airflow db migrate && airflow users create --username admin --password admin --firstname Airflow --lastname Admin --role Admin --email admin@example.com"
        environment:
            - AIRFLOW__CORE__EXECUTOR=LocalExecutor
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
            - AIRFLOW__CORE__LOAD_EXAMPLES=False
            - AIRFLOW__WEBSERVER__SECRET_KEY=super-secret-key
        volumes:
            - ./dags:/opt/airflow/dags
            - ./scripts:/opt/airflow/scripts
            - ./modules:/opt/airflow/modules
            - ./requirements.txt:/opt/airflow/requirements.txt
        depends_on:
            postgres:
                condition: service_healthy
        user: "${AIRFLOW_UID:-50000}:0"

    airflow-webserver:
        image: apache/airflow:2.8.1-python3.11
        container_name: airflow_webserver
        restart: always
        command: webserver
        ports:
            - "8080:8080"
        environment:
            - AIRFLOW__CORE__EXECUTOR=LocalExecutor
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
            - AIRFLOW__CORE__LOAD_EXAMPLES=False
            - AIRFLOW__WEBSERVER__SECRET_KEY=super-secret-key
        volumes:
            - ./dags:/opt/airflow/dags
            - ./scripts:/opt/airflow/scripts
            - ./modules:/opt/airflow/modules
            - ./requirements.txt:/opt/airflow/requirements.txt
        depends_on:
            postgres:
                condition: service_healthy
        healthcheck:
            test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
            interval: 30s
            timeout: 30s
            retries: 3
        user: "${AIRFLOW_UID:-50000}:0"

    airflow-scheduler:
        image: apache/airflow:2.8.1-python3.11
        container_name: airflow_scheduler
        restart: always
        command: scheduler
        environment:
            - AIRFLOW__CORE__EXECUTOR=LocalExecutor
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
            - AIRFLOW__CORE__LOAD_EXAMPLES=False
            - AIRFLOW__WEBSERVER__SECRET_KEY=super-secret-key
        volumes:
            - ./dags:/opt/airflow/dags
            - ./scripts:/opt/airflow/scripts
            - ./modules:/opt/airflow/modules
            - ./requirements.txt:/opt/airflow/requirements.txt
        depends_on:
            postgres:
                condition: service_healthy
        user: "${AIRFLOW_UID:-50000}:0"
